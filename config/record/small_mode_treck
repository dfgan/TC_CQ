base-------
back_bone: CascadeRCNN resnet50 + dcn
fpn: FPN + BFP
anchor_base: anchor_scales=[2, 6],    anchor_ratios=[0.1, 0.2, 0.3, 0.5, 1.0, 2.0, 3.0, 6.0, 10.0],

train_sample:  IoUBalancedNegSampler    iou_th = 0.5, 0.6, 0.7

img_train: dict(type='df_Resize_with_shape', ratio_range=(0.9, 1.1), keep_ratio=True),
           mean=[123.675, 116.28, 103.53], std=[58.395, 57.12, 57.375]


img_test: img_scale=(658, 492),
    imgs_per_gpu=8,
    workers_per_gpu=2,
optimizer = dict(type='SGD', lr=0.01, momentum=0.9, weight_decay=0.0001)
step=[8, 16, 20]   total= 24




fp16 = dict(loss_scale=512.)
epoch_36 result:
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.507
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.818
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.497
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.287
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.522
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.519
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.536
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.588
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.589
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.365
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.604
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.585